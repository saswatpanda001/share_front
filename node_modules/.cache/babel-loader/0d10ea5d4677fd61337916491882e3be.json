{"ast":null,"code":"var _jsxFileName = \"/home/saswat/Desktop/learn_react/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"emailInput\":\n      return {};\n\n    case \"passwordInput\":\n      return {};\n\n    case \"formValidity\":\n      return {};\n  }\n};\n\nconst Login = props => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    enteredEmail: \"\",\n    enteredPassword: \"\",\n    formIsValid: false\n  });\n  useEffect(() => {\n    const loginTimer = setTimeout(() => {\n      setFormIsValid(state.enteredEmail.includes(\"@\" && \".\" && \"com\" && \"mail\") && state.enteredPassword.trim().length > 7);\n    }, 500);\n    return () => {\n      clearTimeout(loginTimer);\n    };\n  }, [state.enteredEmail, state.enteredPassword, stetformIsValid]);\n\n  const emailChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(enteredEmail, enteredPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: enteredEmail,\n          onChange: emailChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"RwPbqAh28Fa5zCQ0eb7t4nH2R9Y=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/saswat/Desktop/learn_react/src/components/Login/Login.js"],"names":["React","useEffect","useState","useReducer","Card","classes","Button","reducer","state","action","type","Login","props","dispatch","enteredEmail","enteredPassword","formIsValid","loginTimer","setTimeout","setFormIsValid","includes","trim","length","clearTimeout","stetformIsValid","emailChangeHandler","event","setEnteredEmail","target","value","passwordChangeHandler","setEnteredPassword","submitHandler","preventDefault","onLogin","login","control","actions","btn"],"mappings":"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","sourcesContent":["import React, { useEffect, useState,useReducer } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst reducer = (state,action)  => {\n  switch(action.type){\n    case \"emailInput\":\n      return{}\n    case \"passwordInput\":\n      return{}\n    case \"formValidity\":\n      return{}\n  }\n}\n\n\n\nconst Login = (props) => {\n  \n  const [state, dispatch] = useReducer(reducer,{enteredEmail:\"\",enteredPassword:\"\",formIsValid:false})\n\n\n  \n\n  useEffect(() => {\n    const loginTimer = setTimeout(() => {\n      setFormIsValid(state.enteredEmail.includes(\"@\" && \".\" && \"com\" && \"mail\")&& state.enteredPassword.trim().length>7);\n    },500);\n\n    return(() =>{\n      clearTimeout(loginTimer);\n    });\n  },[state.enteredEmail,state.enteredPassword,stetformIsValid]);\n\n  \n  const emailChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n  };\n\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(enteredEmail, enteredPassword);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={classes.control}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={enteredEmail}\n            onChange={emailChangeHandler}\n            \n          />\n        </div>\n        <div\n          className={classes.control}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n          \n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}