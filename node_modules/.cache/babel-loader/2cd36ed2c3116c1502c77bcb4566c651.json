{"ast":null,"code":"var _jsxFileName = \"/home/saswat/Desktop/Shareme/frontend/src/ProtectedRoutes.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { DecodeToken } from \"./Components/token_decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet authStatus = false;\n\nif (localStorage.getItem(\"access_token\").user_id) {\n  authStatus = true;\n} else {\n  authStatus = false;\n}\n\nconst ProtectedRoutes = _ref => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let {\n    authStatus,\n    component: Component,\n    ...rest\n  } = _ref;\n  const navigation = useNavigate();\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (authStatus) {\n        return /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 16\n        }, this);\n      } else {\n        navigation(\"/login\");\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n\n  function PrivateRoute(_ref2) {\n    _s();\n\n    let {\n      children\n    } = _ref2;\n    const auth = useAuth();\n    return auth ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 30\n    }, this);\n  }\n\n  _s(PrivateRoute, \"YuJWYXaKIY31b1y7U6yy3IXSxQA=\", true);\n};\n\n_s2(ProtectedRoutes, \"7sZc5EvTsFMSo4mPTlyGC/0+rew=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ProtectedRoutes;\nexport default ProtectedRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoutes\");","map":{"version":3,"sources":["/home/saswat/Desktop/Shareme/frontend/src/ProtectedRoutes.js"],"names":["React","useState","useNavigate","Route","Redirect","DecodeToken","authStatus","localStorage","getItem","user_id","ProtectedRoutes","component","Component","rest","navigation","props","PrivateRoute","children","auth","useAuth"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,KAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,WAAT,QAA4B,2BAA5B;;AAIA,IAAIC,UAAU,GAAG,KAAjB;;AACA,IAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCC,OAAxC,EAAgD;AAC9CH,EAAAA,UAAU,GAAE,IAAZ;AACD,CAFD,MAGI;AACFA,EAAAA,UAAU,GAAC,KAAX;AACD;;AAID,MAAMI,eAAe,GAAG,QAA8C;AAAA;;AAAA;;AAAA,MAA7C;AAACJ,IAAAA,UAAD;AAAYK,IAAAA,SAAS,EAACC,SAAtB;AAAgC,OAAGC;AAAnC,GAA6C;AACpE,QAAMC,UAAU,GAAGZ,WAAW,EAA9B;AACA,sBACE,QAAC,KAAD,OAAWW,IAAX;AAAiB,IAAA,MAAM,EAAGE,KAAD,IAAW;AAClC,UAAGT,UAAH,EAAc;AACZ,4BAAO,QAAC,SAAD,OAAeS;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,MAGI;AACFD,QAAAA,UAAU,CAAC,QAAD,CAAV;AAED;AACF;AARD;AAAA;AAAA;AAAA;AAAA,UADF;;AAcA,WAASE,YAAT,QAAoC;AAAA;;AAAA,QAAd;AAAEC,MAAAA;AAAF,KAAc;AAClC,UAAMC,IAAI,GAAGC,OAAO,EAApB;AACA,WAAOD,IAAI,GAAGD,QAAH,gBAAc,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAzB;AACD;;AAnBmE,KAgB3DD,YAhB2D;AAyBrE,CAzBD;;IAAMN,e;UACeR,W;;;KADfQ,e;AA2BN,eAAeA,eAAf","sourcesContent":["import React,{useState} from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { Route,Redirect } from \"react-router-dom\";\nimport { DecodeToken } from \"./Components/token_decode\";\n\n\n\nlet authStatus = false\nif(localStorage.getItem(\"access_token\").user_id){\n  authStatus =true\n}\nelse{\n  authStatus=false\n}\n\n\n\nconst ProtectedRoutes = ({authStatus,component:Component,...rest}) => {\n  const navigation = useNavigate();\n  return(\n    <Route {...rest} render={(props) => {\n      if(authStatus){\n        return(<Component {...props}></Component>);\n      }\n      else{\n        navigation(\"/login\")\n        \n      }\n    }} >\n    </Route>\n  );\n\n\n  function PrivateRoute({ children }) {\n    const auth = useAuth();\n    return auth ? children : <Navigate to=\"/login\" />;\n  }\n\n\n\n\n\n}\n\nexport default ProtectedRoutes;\n"]},"metadata":{},"sourceType":"module"}