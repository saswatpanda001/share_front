{"ast":null,"code":"import _toConsumableArray from\"/home/saswat/Desktop/learn_react/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/saswat/Desktop/learn_react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Head from'./Components/Header';import{v4 as uuid}from'uuid';import Contact from'./Components/AddContact';import ContactList from'./Components/ContactList';import Details from'./Components/ContactDetails';import{BrowserRouter as Router,Routes,Route}from'react-router-dom';import DeleteContact from'./Components/DeleteContact';// import api from '../api';\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),contacts=_useState2[0],setContacts=_useState2[1];var LOCAL_STORAGE_KEY=\"contacts\";var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),delId=_useState4[0],setDelId=_useState4[1];// const retriveContact = () => {\n//   const response = api.get(\"/contact\");\n// }\nvar addContactHandler=function addContactHandler(param){if(param.name!==\"\"&&param.location!==\"\"&&param.place!==\"\"){param.id=uuid();setContacts([].concat(_toConsumableArray(contacts),[{param:param}]));}else{alert(\"Bad Credentials\");}};var passIdDeletion=function passIdDeletion(key){setDelId(key);};var removeContactHandler=function removeContactHandler(key){var newContactList=contacts.filter(function(i){return i.param.id!==key;});setContacts(newContactList);};useEffect(function(){var getAppData=JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY,JSON.stringify(contacts)));if(getAppData){setContacts(getAppData);}},[]);useEffect(function(){localStorage.setItem(LOCAL_STORAGE_KEY,JSON.stringify(contacts));},[contacts]);return/*#__PURE__*/_jsx(\"div\",{className:\"ui container\",children:/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Head,{}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(ContactList,{contacts:contacts,passKey:passIdDeletion})}),/*#__PURE__*/_jsx(Route,{path:\"/add\",element:/*#__PURE__*/_jsx(Contact,{handlerData:addContactHandler})}),/*#__PURE__*/_jsx(Route,{path:\"/details/:id\",element:/*#__PURE__*/_jsx(Details,{})}),/*#__PURE__*/_jsx(Route,{path:\"/delete\",element:/*#__PURE__*/_jsx(DeleteContact,{delData:delId,delContact:removeContactHandler})})]})]})});};export default App;","map":{"version":3,"sources":["/home/saswat/Desktop/learn_react/src/App.js"],"names":["React","useState","useEffect","Head","v4","uuid","Contact","ContactList","Details","BrowserRouter","Router","Routes","Route","DeleteContact","App","contacts","setContacts","LOCAL_STORAGE_KEY","delId","setDelId","addContactHandler","param","name","location","place","id","alert","passIdDeletion","key","removeContactHandler","newContactList","filter","i","getAppData","JSON","parse","localStorage","getItem","stringify","setItem"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect } from 'react'\nimport Head from './Components/Header';\nimport { v4 as uuid } from 'uuid';\nimport Contact from './Components/AddContact';\nimport ContactList\n from './Components/ContactList';\nimport Details from './Components/ContactDetails';\nimport { BrowserRouter as Router,Routes,Route } from 'react-router-dom';\nimport DeleteContact from './Components/DeleteContact';\n// import api from '../api';\n\nconst App = () => {\n  \n  const [contacts,setContacts] = useState([]);\n  const LOCAL_STORAGE_KEY = \"contacts\";\n  \n  const [delId,setDelId] = useState(\"\");\n\n\n\n  // const retriveContact = () => {\n  //   const response = api.get(\"/contact\");\n  // }\n\n  const addContactHandler = (param) => {\n    if(param.name !== \"\" && param.location!==\"\" && param.place!==\"\"){\n      param.id = uuid();\n      setContacts([...contacts,{param}]);\n    }\n    else{\n      alert(\"Bad Credentials\");\n    }\n  };\n\n  \n  \n  \n  \n \n  const passIdDeletion = (key) => {\n    setDelId(key);\n  }\n\n\n  const removeContactHandler = (key) => {\n    const newContactList = contacts.filter((i) => {\n      return i.param.id !== key;\n    });\n    setContacts(newContactList);\n  }\n\n\n\n\n\n\n  useEffect( () => {\n    const getAppData = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts)));\n    if(getAppData){\n      setContacts(getAppData);\n    }\n  },[]);\n\n\n\n  useEffect( () => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n  },[contacts]);\n  \n\n  return(\n        <div className=\"ui container\">\n          \n          <Router>\n          <Head/>\n          <Routes>\n          <Route path=\"/\" element={<ContactList contacts={contacts} passKey={passIdDeletion}/>}/>\n          <Route path=\"/add\" element={<Contact  handlerData={addContactHandler}/>}/>\n          <Route path=\"/details/:id\" element={<Details/>}/>\n          <Route path=\"/delete\" element={<DeleteContact delData={delId} delContact={removeContactHandler}/>}/>  \n          </Routes>\n          </Router>\n          \n        </div>\n    );\n}\n\nexport default App;\n\n\n\n"]},"metadata":{},"sourceType":"module"}