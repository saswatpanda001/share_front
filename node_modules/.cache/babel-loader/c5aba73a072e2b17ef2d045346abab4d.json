{"ast":null,"code":"var _jsxFileName = \"/home/saswat/Desktop/Food App/src/app.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./components/header\";\nimport NotesList from \"./components/pages/NotesList\";\nimport CreateNote from \"./components/pages/CreateNote\";\nimport Home from \"./components/pages/Home\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport NoteDetails from \"./components/pages/NoteDetails\";\nimport DeleteNote from \"./components/pages/DeleteNote\";\nimport UpdateNote from \"./components/pages/UpdateNote\";\nimport Login from \"./components/Login\";\nimport MovieList from \"./components/omdbmovies/MovieList\";\nimport MovieForm from \"./components/omdbmovies/MovieForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [details, setDetails] = useState();\n  const [notesListArray, setNotesListArray] = useState([]);\n  const DETAIL_KEY = \"detail\";\n\n  const getNotesList = async () => {\n    const noteList = await fetch(\"http://localhost:8000/api/notes\");\n    const data = await noteList.json();\n    console.log(data);\n    setNotesListArray(data);\n  };\n\n  const handleNewNote = async param => {\n    const opt = {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(param)\n    };\n    await fetch('http://localhost:8000/api/notes/new', opt);\n    getNotesList(); // const request = {...param,id:uuid()}\n    // const postResponse = await api.post('/notes',request);\n    // setNotesListArray([...notesListArray,param]);\n  };\n\n  useEffect(() => {\n    //db.json\n    // const getNotesList = async() => {\n    //     const noteList  = await api.get(\"/notes\");       \n    //     if(noteList.data){\n    //         setNotesListArray(noteList.data);\n    //     }\n    // }\n    getNotesList();\n  }, []);\n\n  const handleDetails = param => {\n    console.log(\"detail\");\n    setDetails(param);\n  };\n\n  useEffect(() => {\n    if (details) {\n      localStorage.setItem(DETAIL_KEY, JSON.stringify(details));\n    }\n  }, [handleDetails]);\n  useEffect(() => {\n    const getDetails = JSON.parse(localStorage.getItem(DETAIL_KEY));\n\n    if (getDetails) {\n      setDetails(getDetails);\n    }\n  }, []);\n\n  const handleDelete = async key => {\n    localStorage.removeItem(\"detail\");\n    const opt = {\n      method: \"DELETE\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    };\n    await fetch(`http://localhost:8000/api/notes/${key}/delete`, opt);\n    getNotesList();\n    setDetails(null);\n  };\n\n  const handleUpdate = async data => {\n    const {\n      key\n    } = data;\n    const opt = {\n      method: \"PUT\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    };\n    await fetch(`http://localhost:8000/api/notes/${key}/update`, opt);\n    getNotesList();\n  };\n\n  const [search, setSearch] = useState(\"\");\n\n  const getMovieSearch = data => {\n    setSearch(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/notes\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/notes/add\",\n          element: /*#__PURE__*/_jsxDEV(CreateNote, {\n            passNote: handleNewNote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/notes/list\",\n          element: /*#__PURE__*/_jsxDEV(NotesList, {\n            passNotesList: notesListArray,\n            getDetails: handleDetails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/notes/:id\",\n          element: /*#__PURE__*/_jsxDEV(NoteDetails, {\n            passDetails: details\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/notes/:id/delete\",\n          element: /*#__PURE__*/_jsxDEV(DeleteNote, {\n            passDeleteDetails: details,\n            getDeleteKey: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), \";\", /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/notes/:id/edit\",\n          element: /*#__PURE__*/_jsxDEV(UpdateNote, {\n            passData: details,\n            getFormData: handleUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movies/list\",\n          element: /*#__PURE__*/_jsxDEV(MovieList, {\n            searchData: search\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movies\",\n          element: /*#__PURE__*/_jsxDEV(MovieForm, {\n            passSearchData: getMovieSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"LuqbXQZx/LD1IH238Im3JyBSGqs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/saswat/Desktop/Food App/src/app.js"],"names":["React","useState","useEffect","Header","NotesList","CreateNote","Home","BrowserRouter","Router","Route","Routes","NoteDetails","DeleteNote","UpdateNote","Login","MovieList","MovieForm","App","details","setDetails","notesListArray","setNotesListArray","DETAIL_KEY","getNotesList","noteList","fetch","data","json","console","log","handleNewNote","param","opt","method","headers","body","JSON","stringify","handleDetails","localStorage","setItem","getDetails","parse","getItem","handleDelete","key","removeItem","handleUpdate","search","setSearch","getMovieSearch"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect } from \"react\";\nimport Header from \"./components/header\";\nimport NotesList from \"./components/pages/NotesList\";\nimport CreateNote from \"./components/pages/CreateNote\";\nimport Home from \"./components/pages/Home\";\nimport { BrowserRouter as Router,Route,Routes } from \"react-router-dom\";\nimport NoteDetails from \"./components/pages/NoteDetails\";\nimport DeleteNote from \"./components/pages/DeleteNote\";\nimport UpdateNote from \"./components/pages/UpdateNote\";\nimport Login from \"./components/Login\";\nimport MovieList from \"./components/omdbmovies/MovieList\";\nimport MovieForm from \"./components/omdbmovies/MovieForm\";\n\nconst App = () => {\n    \n    const [details,setDetails] = useState();\n    const [notesListArray,setNotesListArray] = useState([]);\n\n    const DETAIL_KEY = \"detail\";\n\n    const getNotesList = async() => {\n        const noteList = await fetch(\"http://localhost:8000/api/notes\");\n\n        const data = await noteList.json();\n        console.log(data);\n      \n\n\n        setNotesListArray(data);\n    }\n    \n\n\n    const handleNewNote = async(param) => {        \n        const opt = {\n            method:\"POST\",\n            headers: {'Accept': 'application/json','Content-Type': 'application/json'},\n            body: JSON.stringify(param),\n        }\n        await fetch('http://localhost:8000/api/notes/new',opt)\n        getNotesList();\n\n        // const request = {...param,id:uuid()}\n        // const postResponse = await api.post('/notes',request);\n        // setNotesListArray([...notesListArray,param]);\n        }\n    useEffect(() => {\n        //db.json\n        // const getNotesList = async() => {\n        //     const noteList  = await api.get(\"/notes\");       \n        //     if(noteList.data){\n        //         setNotesListArray(noteList.data);\n        //     }\n        // }\n        getNotesList();\n     }, [])\n\n\n\n    const handleDetails = (param) => {\n        console.log(\"detail\");\n        setDetails(param);\n    }\n    useEffect(() => {\n        if(details){\n            localStorage.setItem(DETAIL_KEY,JSON.stringify(details));\n        }\n    }, [handleDetails])\n    useEffect(() => {\n        const getDetails = JSON.parse(localStorage.getItem(DETAIL_KEY));\n        if(getDetails){\n            setDetails(getDetails);\n        } \n    }, [])\n\n\n\n\n    const handleDelete = async(key) => {\n        localStorage.removeItem(\"detail\");\n        const opt = {\n            method:\"DELETE\",\n            headers:{'Accept': 'application/json','Content-Type': 'application/json'},\n        }\n        await fetch(`http://localhost:8000/api/notes/${key}/delete`,opt);\n        getNotesList()\n        setDetails(null);\n    }\n\n    const handleUpdate = async(data) => {\n        const {key} = data;\n        const opt = {\n            method:\"PUT\",\n            headers: {'Accept': 'application/json','Content-Type': 'application/json'},\n            body: JSON.stringify(data),\n        }\n        await fetch(`http://localhost:8000/api/notes/${key}/update`,opt);\n        getNotesList();\n    }\n\n\n    const [search,setSearch] = useState(\"\")\n    const getMovieSearch = (data) => {\n        setSearch(data);\n    }\n   \n\n    return(\n        <div>\n        \n        <Router>\n        <Header/>\n            <Routes> \n            <Route path=\"/\" element={<Home/>}/>    \n            <Route path=\"/notes\" element={<Login/>}/>\n            <Route path=\"/notes/add\" element={<CreateNote passNote={handleNewNote}/>}/>\n            <Route path=\"/notes/list\" element={<NotesList  passNotesList={notesListArray}  getDetails={handleDetails}/>}/>\n            <Route path=\"/notes/:id\" element={<NoteDetails passDetails={details}/>}/>\n            <Route path=\"/notes/:id/delete\" element={<DeleteNote passDeleteDetails={details} getDeleteKey={handleDelete}/>}/>;\n            <Route path=\"/notes/:id/edit\" element={<UpdateNote passData={details}  getFormData={handleUpdate}/>}/> \n            \n            \n            <Route path=\"/movies/list\" element={<MovieList searchData={search}/>}></Route>\n            <Route path=\"/movies\" element={<MovieForm passSearchData={getMovieSearch}/>}></Route>\n            \n\n\n\n            \n            </Routes>\n        </Router>\n        </div>\n    );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}