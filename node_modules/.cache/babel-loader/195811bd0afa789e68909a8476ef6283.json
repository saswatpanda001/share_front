{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit'; // const redux = require('redux')\n\nconst counterSlice = createSlice({\n  name: \"learn_reduxtools\",\n  initialState: {\n    board: true,\n    days: 0\n  },\n  reducers: {\n    increment(state, action) {\n      if (action.payload) {\n        state.days = state.days + action.payload;\n      } else {\n        state.days += 1;\n      }\n    },\n\n    decrement(state) {\n      state.days -= 1;\n    },\n\n    toggle(state) {\n      state.board = !state.board;\n    }\n\n  }\n});\nconst authenticationSlice = createSlice({\n  name: \"learn_reduxtools1\",\n  initialState: {\n    login: false\n  },\n  reducers: {\n    user_auth(state) {\n      state.login = !state.login;\n    }\n\n  }\n});\nconst ReduxCentralStore = configureStore({\n  reducer: {\n    counter: C\n  }\n});\nexport const CounterActions = counterSlice.actions;\nexport default ReduxCentralStore;","map":{"version":3,"sources":["/home/saswat/Desktop/Shareme/frontend/src/Components/Redux/ReduxTutorial.js"],"names":["createSlice","configureStore","counterSlice","name","initialState","board","days","reducers","increment","state","action","payload","decrement","toggle","authenticationSlice","login","user_auth","ReduxCentralStore","reducer","counter","C","CounterActions","actions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C,C,CAEA;;AAIA,MAAMC,YAAY,GAAGF,WAAW,CAAC;AAC7BG,EAAAA,IAAI,EAAC,kBADwB;AAE7BC,EAAAA,YAAY,EAAE;AAACC,IAAAA,KAAK,EAAC,IAAP;AAAYC,IAAAA,IAAI,EAAC;AAAjB,GAFe;AAG7BC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,SAAS,CAACC,KAAD,EAAOC,MAAP,EAAc;AACnB,UAAGA,MAAM,CAACC,OAAV,EAAkB;AACdF,QAAAA,KAAK,CAACH,IAAN,GAAaG,KAAK,CAACH,IAAN,GAAWI,MAAM,CAACC,OAA/B;AACH,OAFD,MAGI;AAACF,QAAAA,KAAK,CAACH,IAAN,IAAY,CAAZ;AAAc;AACtB,KANI;;AAOLM,IAAAA,SAAS,CAACH,KAAD,EAAO;AAACA,MAAAA,KAAK,CAACH,IAAN,IAAY,CAAZ;AAAc,KAP1B;;AAQLO,IAAAA,MAAM,CAACJ,KAAD,EAAO;AAACA,MAAAA,KAAK,CAACJ,KAAN,GAAY,CAACI,KAAK,CAACJ,KAAnB;AAAyB;;AARlC;AAHoB,CAAD,CAAhC;AAiBA,MAAMS,mBAAmB,GAAGd,WAAW,CAAC;AACpCG,EAAAA,IAAI,EAAC,mBAD+B;AAEpCC,EAAAA,YAAY,EAAE;AAACW,IAAAA,KAAK,EAAC;AAAP,GAFsB;AAGpCR,EAAAA,QAAQ,EAAC;AACLS,IAAAA,SAAS,CAACP,KAAD,EAAO;AACZA,MAAAA,KAAK,CAACM,KAAN,GAAY,CAACN,KAAK,CAACM,KAAnB;AACH;;AAHI;AAH2B,CAAD,CAAvC;AAUA,MAAME,iBAAiB,GAAGhB,cAAc,CAAC;AACrCiB,EAAAA,OAAO,EAAC;AAACC,IAAAA,OAAO,EAACC;AAAT;AAD6B,CAAD,CAAxC;AAIA,OAAO,MAAMC,cAAc,GAAGnB,YAAY,CAACoB,OAApC;AACP,eAAeL,iBAAf","sourcesContent":["import { createSlice, configureStore } from '@reduxjs/toolkit'\n\n// const redux = require('redux')\n\n\n\nconst counterSlice = createSlice({\n    name:\"learn_reduxtools\",\n    initialState: {board:true,days:0},\n    reducers:{\n        increment(state,action){\n            if(action.payload){\n                state.days = state.days+action.payload\n            }\n            else{state.days+=1}\n        },\n        decrement(state){state.days-=1},\n        toggle(state){state.board=!state.board},\n       \n}})\n\n\n\nconst authenticationSlice = createSlice({\n    name:\"learn_reduxtools1\",\n    initialState: {login:false},\n    reducers:{\n        user_auth(state){\n            state.login=!state.login\n        }\n       \n}})\n\nconst ReduxCentralStore = configureStore({\n    reducer:{counter:C}\n});\n\nexport const CounterActions = counterSlice.actions\nexport default ReduxCentralStore;\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}