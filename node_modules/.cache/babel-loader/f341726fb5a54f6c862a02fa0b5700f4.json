{"ast":null,"code":"const redux = require('redux');\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst boardStates = {\n  board: true,\n  days: 0\n};\ncreateSlice({\n  name: \"learn_reduxtools\",\n  boardStates,\n  reducers: {\n    increment(state) {\n      state.days++;\n    },\n\n    decrement(state) {\n      state.days--;\n    },\n\n    toggle(state) {\n      !state.board;\n    },\n\n    increase_amt(state, action) {\n      state.days = state.days + action.amn;\n    }\n\n  }\n});\n\nconst Reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : boardStates;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type == \"increase\") {\n    if (action.amount) {\n      return {\n        days: state.days + action.amount,\n        board: state.board\n      };\n    } else {\n      return {\n        days: state.days + 1,\n        board: state.board\n      };\n    }\n  }\n\n  if (action.type == \"decrease\") {\n    if (state.days >= 0) {\n      return {\n        days: state.days - 1,\n        board: state.board\n      };\n    }\n  }\n\n  if (action.type == \"toggle\") {\n    return {\n      days: state.days,\n      board: !state.board\n    };\n  } else {\n    return {\n      days: state.days,\n      board: state.board\n    };\n  }\n};\n\n_c = Reducer;\nconst ReduxCentralStore = redux.createStore(Reducer); // ReduxCentralStore.getState()\n// ReduxCentralStore.dispatch({type:\"increase\"})\n\n_c2 = ReduxCentralStore;\nexport default ReduxCentralStore;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Reducer\");\n$RefreshReg$(_c2, \"ReduxCentralStore\");","map":{"version":3,"sources":["/home/saswat/Desktop/Shareme/frontend/src/Components/Redux/ReduxTutorial.js"],"names":["redux","require","createSlice","boardStates","board","days","name","reducers","increment","state","decrement","toggle","increase_amt","action","amn","Reducer","type","amount","ReduxCentralStore","createStore"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAGA,MAAMC,WAAW,GAAG;AAACC,EAAAA,KAAK,EAAC,IAAP;AAAYC,EAAAA,IAAI,EAAC;AAAjB,CAApB;AAEAH,WAAW,CAAC;AACRI,EAAAA,IAAI,EAAC,kBADG;AAERH,EAAAA,WAFQ;AAGRI,EAAAA,QAAQ,EAAC;AACLC,IAAAA,SAAS,CAACC,KAAD,EAAO;AAACA,MAAAA,KAAK,CAACJ,IAAN;AAAa,KADzB;;AAELK,IAAAA,SAAS,CAACD,KAAD,EAAO;AAACA,MAAAA,KAAK,CAACJ,IAAN;AAAa,KAFzB;;AAGLM,IAAAA,MAAM,CAACF,KAAD,EAAO;AAAC,OAACA,KAAK,CAACL,KAAP;AAAa,KAHtB;;AAILQ,IAAAA,YAAY,CAACH,KAAD,EAAOI,MAAP,EAAc;AAACJ,MAAAA,KAAK,CAACJ,IAAN,GAAaI,KAAK,CAACJ,IAAN,GAAWQ,MAAM,CAACC,GAA/B;AAAmC;;AAJzD;AAHD,CAAD,CAAX;;AAkBA,MAAMC,OAAO,GAAG,YAA8B;AAAA,MAA7BN,KAA6B,uEAAvBN,WAAuB;AAAA,MAAXU,MAAW;;AAC1C,MAAGA,MAAM,CAACG,IAAP,IAAe,UAAlB,EAA6B;AACzB,QAAGH,MAAM,CAACI,MAAV,EAAiB;AACb,aAAO;AAACZ,QAAAA,IAAI,EAACI,KAAK,CAACJ,IAAN,GAAYQ,MAAM,CAACI,MAAzB;AAAgCb,QAAAA,KAAK,EAACK,KAAK,CAACL;AAA5C,OAAP;AACH,KAFD,MAGI;AACA,aAAO;AAACC,QAAAA,IAAI,EAACI,KAAK,CAACJ,IAAN,GAAW,CAAjB;AAAmBD,QAAAA,KAAK,EAACK,KAAK,CAACL;AAA/B,OAAP;AACH;AACJ;;AACD,MAAGS,MAAM,CAACG,IAAP,IAAe,UAAlB,EAA6B;AACzB,QAAGP,KAAK,CAACJ,IAAN,IAAY,CAAf,EAAiB;AACb,aAAO;AAACA,QAAAA,IAAI,EAACI,KAAK,CAACJ,IAAN,GAAW,CAAjB;AAAmBD,QAAAA,KAAK,EAACK,KAAK,CAACL;AAA/B,OAAP;AACH;AAEJ;;AACD,MAAGS,MAAM,CAACG,IAAP,IAAe,QAAlB,EAA2B;AACvB,WAAO;AAACX,MAAAA,IAAI,EAACI,KAAK,CAACJ,IAAZ;AAAiBD,MAAAA,KAAK,EAAC,CAACK,KAAK,CAACL;AAA9B,KAAP;AACH,GAFD,MAGI;AACA,WAAO;AAACC,MAAAA,IAAI,EAACI,KAAK,CAACJ,IAAZ;AAAiBD,MAAAA,KAAK,EAACK,KAAK,CAACL;AAA7B,KAAP;AACH;AAEJ,CAtBD;;KAAMW,O;AAyBN,MAAMG,iBAAiB,GAAGlB,KAAK,CAACmB,WAAN,CAAkBJ,OAAlB,CAA1B,C,CACA;AACA;;MAFMG,iB;AAIN,eAAeA,iBAAf","sourcesContent":["const redux = require('redux')\nimport { createSlice } from \"@reduxjs/toolkit\"\n\n\nconst boardStates = {board:true,days:0}\n\ncreateSlice({\n    name:\"learn_reduxtools\",\n    boardStates,\n    reducers:{\n        increment(state){state.days++},\n        decrement(state){state.days--},\n        toggle(state){!state.board},\n        increase_amt(state,action){state.days = state.days+action.amn}\n    }\n})\n\n\n\n\n\n\n\n\nconst Reducer = (state=boardStates,action) => {\n    if(action.type == \"increase\"){\n        if(action.amount){\n            return({days:state.days+ action.amount,board:state.board});\n        }\n        else{\n            return({days:state.days+1,board:state.board});\n        }\n    }\n    if(action.type == \"decrease\"){\n        if(state.days>=0){\n            return({days:state.days-1,board:state.board});\n        }\n        \n    }\n    if(action.type == \"toggle\"){\n        return({days:state.days,board:!state.board})\n    }\n    else{\n        return({days:state.days,board:state.board})\n    }\n    \n}\n\n\nconst ReduxCentralStore = redux.createStore(Reducer);\n// ReduxCentralStore.getState()\n// ReduxCentralStore.dispatch({type:\"increase\"})\n\nexport default ReduxCentralStore;\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}