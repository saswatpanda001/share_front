{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit'; // const redux = require('redux')\n\nconst counterSlice = createSlice({\n  name: \"learn_reduxtools\",\n  initialState: {\n    board: true,\n    days: 0\n  },\n  reducers: {\n    increment(state, action) {\n      if (action.payload) {\n        state.days = state.days + action.payload;\n      } else {\n        state.days += 1;\n      }\n    },\n\n    decrement(state) {\n      state.days -= 1;\n    },\n\n    toggle(state) {\n      state.board = !state.board;\n    }\n\n  }\n});\nconst authSlice = createSlice({\n  name: \"learn_reduxtools1\",\n  initialState: {\n    login: false,\n    username: \"\",\n    name: \"\"\n  },\n  reducers: {\n    user_auth(state, action) {\n      state.login = action.payload;\n    },\n\n    username(state, action) {\n      state.username = action.payload;\n    },\n\n    name(state, action) {\n      state.name = action.payload;\n    },\n\n    user_id(state, action) {\n      state.user_id = action.payload;\n    }\n\n  }\n});\nconst ReduxCentralStore = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const CounterActions = counterSlice.actions;\nexport const AuthActions = authSlice.actions;\nexport default ReduxCentralStore;","map":{"version":3,"sources":["/home/saswat/Desktop/Shareme/frontend/src/Components/Redux/ReduxTutorial.js"],"names":["createSlice","configureStore","counterSlice","name","initialState","board","days","reducers","increment","state","action","payload","decrement","toggle","authSlice","login","username","user_auth","user_id","ReduxCentralStore","reducer","counter","auth","CounterActions","actions","AuthActions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C,C,CAEA;;AAIA,MAAMC,YAAY,GAAGF,WAAW,CAAC;AAC7BG,EAAAA,IAAI,EAAC,kBADwB;AAE7BC,EAAAA,YAAY,EAAE;AAACC,IAAAA,KAAK,EAAC,IAAP;AAAYC,IAAAA,IAAI,EAAC;AAAjB,GAFe;AAG7BC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,SAAS,CAACC,KAAD,EAAOC,MAAP,EAAc;AACnB,UAAGA,MAAM,CAACC,OAAV,EAAkB;AACdF,QAAAA,KAAK,CAACH,IAAN,GAAaG,KAAK,CAACH,IAAN,GAAWI,MAAM,CAACC,OAA/B;AACH,OAFD,MAGI;AAACF,QAAAA,KAAK,CAACH,IAAN,IAAY,CAAZ;AAAc;AACtB,KANI;;AAOLM,IAAAA,SAAS,CAACH,KAAD,EAAO;AAACA,MAAAA,KAAK,CAACH,IAAN,IAAY,CAAZ;AAAc,KAP1B;;AAQLO,IAAAA,MAAM,CAACJ,KAAD,EAAO;AAACA,MAAAA,KAAK,CAACJ,KAAN,GAAY,CAACI,KAAK,CAACJ,KAAnB;AAAyB;;AARlC;AAHoB,CAAD,CAAhC;AAiBA,MAAMS,SAAS,GAAGd,WAAW,CAAC;AAC1BG,EAAAA,IAAI,EAAC,mBADqB;AAE1BC,EAAAA,YAAY,EAAE;AAACW,IAAAA,KAAK,EAAC,KAAP;AAAaC,IAAAA,QAAQ,EAAC,EAAtB;AAAyBb,IAAAA,IAAI,EAAC;AAA9B,GAFY;AAG1BI,EAAAA,QAAQ,EAAC;AACLU,IAAAA,SAAS,CAACR,KAAD,EAAOC,MAAP,EAAc;AACnBD,MAAAA,KAAK,CAACM,KAAN,GAAYL,MAAM,CAACC,OAAnB;AACH,KAHI;;AAILK,IAAAA,QAAQ,CAACP,KAAD,EAAOC,MAAP,EAAc;AAClBD,MAAAA,KAAK,CAACO,QAAN,GAAiBN,MAAM,CAACC,OAAxB;AACH,KANI;;AAOLR,IAAAA,IAAI,CAACM,KAAD,EAAOC,MAAP,EAAc;AACdD,MAAAA,KAAK,CAACN,IAAN,GAAaO,MAAM,CAACC,OAApB;AACH,KATI;;AAULO,IAAAA,OAAO,CAACT,KAAD,EAAOC,MAAP,EAAc;AACjBD,MAAAA,KAAK,CAACS,OAAN,GAAgBR,MAAM,CAACC,OAAvB;AACH;;AAZI;AAHiB,CAAD,CAA7B;AAoBA,MAAMQ,iBAAiB,GAAGlB,cAAc,CAAC;AACrCmB,EAAAA,OAAO,EAAC;AAACC,IAAAA,OAAO,EAACnB,YAAY,CAACkB,OAAtB;AAA8BE,IAAAA,IAAI,EAACR,SAAS,CAACM;AAA7C;AAD6B,CAAD,CAAxC;AAIA,OAAO,MAAMG,cAAc,GAAGrB,YAAY,CAACsB,OAApC;AACP,OAAO,MAAMC,WAAW,GAAGX,SAAS,CAACU,OAA9B;AACP,eAAeL,iBAAf","sourcesContent":["import { createSlice, configureStore } from '@reduxjs/toolkit'\n\n// const redux = require('redux')\n\n\n\nconst counterSlice = createSlice({\n    name:\"learn_reduxtools\",\n    initialState: {board:true,days:0},\n    reducers:{\n        increment(state,action){\n            if(action.payload){\n                state.days = state.days+action.payload\n            }\n            else{state.days+=1}\n        },\n        decrement(state){state.days-=1},\n        toggle(state){state.board=!state.board},\n       \n}})\n\n\n\nconst authSlice = createSlice({\n    name:\"learn_reduxtools1\",\n    initialState: {login:false,username:\"\",name:\"\"},\n    reducers:{\n        user_auth(state,action){\n            state.login=action.payload\n        },\n        username(state,action){\n            state.username = action.payload\n        },\n        name(state,action){\n            state.name = action.payload\n        },\n        user_id(state,action){\n            state.user_id = action.payload\n        },\n        \n       \n}})\n\nconst ReduxCentralStore = configureStore({\n    reducer:{counter:counterSlice.reducer,auth:authSlice.reducer}\n});\n\nexport const CounterActions = counterSlice.actions\nexport const AuthActions = authSlice.actions\nexport default ReduxCentralStore;\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}