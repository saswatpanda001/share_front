{"ast":null,"code":"var _jsxFileName = \"/home/saswat/Desktop/Shareme/frontend/src/ProtectedRoutes.js\";\nimport React, { useState } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProtectedRoutes(_ref) {\n  let {\n    component: Component,\n    ...restOfProps\n  } = _ref;\n  const isAuthenticated = null;\n\n  if (localStorage.getItem(\"access_token\")) {\n    isAuthenticated = true;\n  } else {\n    isAuthenticated = false;\n  }\n\n  console.log(\"this\", isAuthenticated);\n  return /*#__PURE__*/_jsxDEV(Route, { ...restOfProps,\n    render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/signin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 54\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ProtectedRoutes;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoutes\");","map":{"version":3,"sources":["/home/saswat/Desktop/Shareme/frontend/src/ProtectedRoutes.js"],"names":["React","useState","Redirect","Route","ProtectedRoutes","component","Component","restOfProps","isAuthenticated","localStorage","getItem","console","log","props","ProtectedRoute"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;;;AAEA,SAASC,eAAT,OAAmE;AAAA,MAA1C;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwB,OAAGC;AAA3B,GAA0C;AAG/D,QAAMC,eAAe,GAAG,IAAxB;;AACA,MAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAH,EAAwC;AACpCF,IAAAA,eAAe,GAAC,IAAhB;AACH,GAFD,MAGI;AACAA,IAAAA,eAAe,GAAC,KAAhB;AACH;;AACHG,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBJ,eAApB;AAEA,sBACE,QAAC,KAAD,OACMD,WADN;AAEE,IAAA,MAAM,EAAGM,KAAD,IACNL,eAAe,gBAAG,QAAC,SAAD,OAAeK;AAAf;AAAA;AAAA;AAAA;AAAA,YAAH,gBAA8B,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAHjD;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KApBQT,e;AAsBT,eAAeU,cAAf","sourcesContent":["import React,{useState} from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nfunction ProtectedRoutes({ component: Component, ...restOfProps }) {\n  \n\n    const isAuthenticated = null;\n    if(localStorage.getItem(\"access_token\")){\n        isAuthenticated=true;\n    }\n    else{\n        isAuthenticated=false\n    }\n  console.log(\"this\", isAuthenticated);\n\n  return (\n    <Route\n      {...restOfProps}\n      render={(props) =>\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/signin\" />\n      }\n    />\n  );\n}\n\nexport default ProtectedRoute;\n"]},"metadata":{},"sourceType":"module"}