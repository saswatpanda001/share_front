{"ast":null,"code":"var _jsxFileName = \"/home/saswat/Desktop/learn_react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const getLoginInfo = localStorage.getItem(\"loginInfo\");\n    console.log(getLoginInfo);\n\n    if (getLoginInfo === \"in\") {\n      setIsLoggedIn(true);\n    } else {\n      setIsLoggedIn(false);\n    }\n  }, []);\n\n  const loginHandler = (email, password) => {\n    setIsLoggedIn(true);\n    localStorage.setItem(\"loginInfo\", \"in\");\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n    localStorage.setItem(\"loginInfo\", \"out\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n      isAuthenticated: isLoggedIn,\n      onLogout: logoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/saswat/Desktop/learn_react/src/App.js"],"names":["React","useState","useEffect","Login","Home","MainHeader","App","isLoggedIn","setIsLoggedIn","getLoginInfo","localStorage","getItem","console","log","loginHandler","email","password","setItem","logoutHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMO,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;;AAEA,QAAIA,YAAY,KAAI,IAApB,EAAyB;AACvBD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAFD,MAGI;AACFA,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF,GAVQ,EAUP,EAVO,CAAT;;AAaA,QAAMM,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxCR,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,IAAAA,YAAY,CAACO,OAAb,CAAqB,WAArB,EAAiC,IAAjC;AACD,GAHD;;AAIA,QAAMC,aAAa,GAAG,MAAM;AAC1BV,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,IAAAA,YAAY,CAACO,OAAb,CAAqB,WAArB,EAAiC,KAAjC;AACD,GAHD;;AAKA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,eAAe,EAAEV,UAA7B;AAAyC,MAAA,QAAQ,EAAEW;AAAnD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,iBACG,CAACX,UAAD,iBAAe,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEO;AAAhB;AAAA;AAAA;AAAA;AAAA,cADlB,EAEGP,UAAU,iBAAI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEW;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAlCQZ,G;;KAAAA,G;AAoCT,eAAeA,GAAf","sourcesContent":["import React, { useState,useEffect } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  \n  useEffect(()=>{\n    const getLoginInfo = localStorage.getItem(\"loginInfo\");\n    console.log(getLoginInfo);\n    \n    if (getLoginInfo=== \"in\"){\n      setIsLoggedIn(true);\n    }\n    else{\n      setIsLoggedIn(false);\n    }\n  },[])\n\n\n  const loginHandler = (email, password) => {\n    setIsLoggedIn(true);\n    localStorage.setItem(\"loginInfo\",\"in\");\n  };\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n    localStorage.setItem(\"loginInfo\",\"out\");\n  };\n  \n  return (\n    <React.Fragment>\n      <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}