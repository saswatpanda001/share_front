{"ast":null,"code":"// const redux = require('redux')\n// const boardStates = {board:true,days:0}\n// const Reducer = (state=boardStates,action) => {\n//     if(action.type == \"increase\"){\n//         if(action.amount){\n//             return({days:state.days+ action.amount,board:state.board});\n//         }\n//         else{\n//             return({days:state.days+1,board:state.board});\n//         }\n//     }\n//     if(action.type == \"decrease\"){\n//         if(state.days>0){\n//             return({days:state.days-1,board:state.board});\n//         }\n//     }\n//     if(action.type == \"toggle\"){\n//         return({days:state.days,board:!state.board})\n//     }\n// }\n// const ReduxCentralStore = redux.createStore(Reducer);\n// const Component = () => {\n//     const initialState = ReduxCentralStore.getState()\n//     console.log(initialState);\n// }\n// ReduxCentralStore.subscribe(Component)\n// ReduxCentralStore.dispatch({type:\"increase\"})\n// export default ReduxCentralStore;\nconst redux = require('redux');\n\nconst originalState = {\n  value: 100,\n  req: true,\n  num: 1,\n  name: \"linux\"\n};\n\nconst Reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : originalState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"increment\") {\n    return {\n      value: state.value + 1,\n      req: true,\n      num: state.num + 1,\n      name: \"linux\"\n    };\n  }\n\n  if (action.type === \"increment\") {\n    return {\n      value: state.value + 1,\n      req: true,\n      num: state.num + 1,\n      name: \"linux\"\n    };\n  }\n};\n\n_c = Reducer;\nconst store = redux.createStore(Reducer);\n\nvar _c;\n\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"sources":["/home/saswat/Desktop/Shareme/frontend/src/Components/Redux/ReduxTutorial.js"],"names":["redux","require","originalState","value","req","num","name","Reducer","state","action","type","store","createStore"],"mappings":"AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,aAAa,GAAG;AAACC,EAAAA,KAAK,EAAC,GAAP;AAAWC,EAAAA,GAAG,EAAC,IAAf;AAAoBC,EAAAA,GAAG,EAAC,CAAxB;AAA0BC,EAAAA,IAAI,EAAC;AAA/B,CAAtB;;AAEA,MAAMC,OAAO,GAAG,YAAgC;AAAA,MAA/BC,KAA+B,uEAAzBN,aAAyB;AAAA,MAAXO,MAAW;;AAC5C,MAAGA,MAAM,CAACC,IAAP,KAAgB,WAAnB,EAA+B;AAC3B,WAAO;AAACP,MAAAA,KAAK,EAACK,KAAK,CAACL,KAAN,GAAY,CAAnB;AAAqBC,MAAAA,GAAG,EAAC,IAAzB;AAA8BC,MAAAA,GAAG,EAACG,KAAK,CAACH,GAAN,GAAU,CAA5C;AAA8CC,MAAAA,IAAI,EAAC;AAAnD,KAAP;AACH;;AACD,MAAGG,MAAM,CAACC,IAAP,KAAgB,WAAnB,EAA+B;AAC3B,WAAO;AAACP,MAAAA,KAAK,EAACK,KAAK,CAACL,KAAN,GAAY,CAAnB;AAAqBC,MAAAA,GAAG,EAAC,IAAzB;AAA8BC,MAAAA,GAAG,EAACG,KAAK,CAACH,GAAN,GAAU,CAA5C;AAA8CC,MAAAA,IAAI,EAAC;AAAnD,KAAP;AACH;AAEJ,CARD;;KAAMC,O;AAUN,MAAMI,KAAK,GAAGX,KAAK,CAACY,WAAN,CAAkBL,OAAlB,CAAd","sourcesContent":["// const redux = require('redux')\n\n// const boardStates = {board:true,days:0}\n\n// const Reducer = (state=boardStates,action) => {\n//     if(action.type == \"increase\"){\n//         if(action.amount){\n//             return({days:state.days+ action.amount,board:state.board});\n//         }\n//         else{\n//             return({days:state.days+1,board:state.board});\n//         }\n//     }\n//     if(action.type == \"decrease\"){\n//         if(state.days>0){\n//             return({days:state.days-1,board:state.board});\n//         }\n        \n//     }\n//     if(action.type == \"toggle\"){\n//         return({days:state.days,board:!state.board})\n//     }\n// }\n\n\n// const ReduxCentralStore = redux.createStore(Reducer);\n\n// const Component = () => {\n//     const initialState = ReduxCentralStore.getState()\n//     console.log(initialState);\n// }\n\n// ReduxCentralStore.subscribe(Component)\n// ReduxCentralStore.dispatch({type:\"increase\"})\n\n\n// export default ReduxCentralStore;\n\nconst redux = require('redux')\n\nconst originalState = {value:100,req:true,num:1,name:\"linux\"}\n\nconst Reducer = (state=originalState,action) => {\n    if(action.type === \"increment\"){\n        return({value:state.value+1,req:true,num:state.num+1,name:\"linux\"})\n    }\n    if(action.type === \"increment\"){\n        return({value:state.value+1,req:true,num:state.num+1,name:\"linux\"})\n    }\n    \n}\n\nconst store = redux.createStore(Reducer);\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}