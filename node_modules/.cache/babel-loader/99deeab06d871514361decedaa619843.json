{"ast":null,"code":"var _jsxFileName = \"/home/saswat/Desktop/learn_react/src/usereducer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"count\":\n      return {\n        counter: state.counter + 1,\n        showText: state.showText\n      };\n\n    case \"toggleShowText1\":\n      return {\n        counter: state.counter,\n        showText: \"1\"\n      };\n\n    case \"toggleShowText2\":\n      return {\n        counter: state.counter,\n        showText: \"2\"\n      };\n  }\n};\n\nconst ReducerApp = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    counter: 0,\n    showText: \"0\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    align: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\" \", state.counter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          dispatch({\n            type: \"count\"\n          });\n          if (state.showText === \"1\") dispatch({\n            type: \"toggleShowText2\"\n          });else if (state.showText === \"0\") {\n            dispatch({\n              type: \"toggleShowText1\"\n            });\n          } else {\n            dispatch({\n              type: \"toggleShowText1\"\n            });\n          }\n        },\n        children: \"increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), state.showText === \"2\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"An even number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 32\n    }, this), state.showText === \"1\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"An odd number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 32\n    }, this), state.showText === \"0\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Lets Start Counting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReducerApp, \"nBVdvLINCWlIwQyhF/yDTx01TZ0=\");\n\n_c = ReducerApp;\nexport default ReducerApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReducerApp\");","map":{"version":3,"sources":["/home/saswat/Desktop/learn_react/src/usereducer.js"],"names":["React","useReducer","reducer","state","action","type","counter","showText","ReducerApp","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,QAAgC,OAAhC;;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAChC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,OAAL;AACE,aAAM;AAACC,QAAAA,OAAO,EAAEH,KAAK,CAACG,OAAN,GAAc,CAAxB;AAA2BC,QAAAA,QAAQ,EAAEJ,KAAK,CAACI;AAA3C,OAAN;;AACF,SAAK,iBAAL;AACE,aAAM;AAACD,QAAAA,OAAO,EAAEH,KAAK,CAACG,OAAhB;AAAyBC,QAAAA,QAAQ,EAAC;AAAlC,OAAN;;AACA,SAAK,iBAAL;AACE,aAAM;AAACD,QAAAA,OAAO,EAAEH,KAAK,CAACG,OAAhB;AAAyBC,QAAAA,QAAQ,EAAC;AAAlC,OAAN;AANN;AASD,CAVD;;AAYA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBR,UAAU,CAACC,OAAD,EAAS;AAACI,IAAAA,OAAO,EAAC,CAAT;AAAWC,IAAAA,QAAQ,EAAC;AAApB,GAAT,CAApC;AAKA,sBACG;AAAK,IAAA,KAAK,EAAC,QAAX;AAAA,4BACA;AAAA,8BAEG;AAAA,wBAAMJ,KAAK,CAACG,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH,eAGG;AAAQ,QAAA,OAAO,EAAE,MAAM;AACrBG,UAAAA,QAAQ,CAAC;AAACJ,YAAAA,IAAI,EAAC;AAAN,WAAD,CAAR;AACA,cAAIF,KAAK,CAACI,QAAN,KAAkB,GAAtB,EACCE,QAAQ,CAAC;AAACJ,YAAAA,IAAI,EAAC;AAAN,WAAD,CAAR,CADD,KAEK,IAAGF,KAAK,CAACI,QAAN,KAAmB,GAAtB,EAA0B;AAC9BE,YAAAA,QAAQ,CAAC;AAACJ,cAAAA,IAAI,EAAC;AAAN,aAAD,CAAR;AACA,WAFI,MAGD;AACHI,YAAAA,QAAQ,CAAC;AAACJ,cAAAA,IAAI,EAAC;AAAN,aAAD,CAAR;AACA;AACF,SAVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAgBCF,KAAK,CAACI,QAAN,KAAmB,GAAnB,iBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhB3B,EAiBCJ,KAAK,CAACI,QAAN,KAAmB,GAAnB,iBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjB3B,EAkBCJ,KAAK,CAACI,QAAN,KAAmB,GAAnB,iBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlB3B;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAsBA,CA5BD;;GAAMC,U;;KAAAA,U;AA6BN,eAAeA,UAAf","sourcesContent":["import React,{useReducer } from \"react\";\n\n\n\nconst reducer = (state,action) => {\n  switch(action.type){\n    case \"count\":\n      return{counter: state.counter+1, showText: state.showText};\n    case \"toggleShowText1\":\n      return{counter: state.counter, showText:\"1\" };\n      case \"toggleShowText2\":\n        return{counter: state.counter, showText:\"2\" };\n  }\n\n}\n\nconst ReducerApp = () => {\n const [state, dispatch] = useReducer(reducer,{counter:0,showText:\"0\"});\n\n\n\n\n return(\n    <div align=\"center\">\n    <div>\n     \n       <h3> {state.counter}</h3>\n       <button onClick={() => {\n         dispatch({type:\"count\"});\n         if (state.showText ===\"1\")\n          dispatch({type:\"toggleShowText2\"});\n         else if(state.showText === \"0\"){\n          dispatch({type:\"toggleShowText1\"});\n         }\n         else{\n          dispatch({type:\"toggleShowText1\"});\n         } \n       }}>increment</button> \n    </div>\n    {state.showText === \"2\" && <p>An even number</p>} \n    {state.showText === \"1\" && <p>An odd number</p>} \n    {state.showText === \"0\" && <p>Lets Start Counting</p>} \n    </div>\n  );\n}\nexport default ReducerApp;\n"]},"metadata":{},"sourceType":"module"}