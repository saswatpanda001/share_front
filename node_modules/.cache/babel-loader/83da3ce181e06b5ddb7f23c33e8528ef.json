{"ast":null,"code":"var _jsxFileName = \"/home/saswat/Desktop/Shareme/frontend/src/Components/meals/meals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport MealCard from './MealCard';\nimport Loading from '../basic/loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MealsHome = () => {\n  _s();\n\n  const [mealDetails, setMealDetails] = useState({\n    loading: true,\n    mealArray: []\n  });\n  cosnt[(toggle, setToggle)] = {};\n\n  const getMeals = async () => {\n    const FetchMealDetails = await fetch('http://localhost:8000/khabar/meals');\n    const CleanedMealDetails = await FetchMealDetails.json();\n    setMealDetails({\n      loading: false,\n      mealArray: CleanedMealDetails\n    });\n  };\n\n  useEffect(() => {\n    getMeals();\n  }, []);\n  const Meal = mealDetails.mealArray;\n  const RenderMeals = Meal.map(each => {\n    console.log(\"aaa\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MealCard, {\n        passMealDetails: each\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this);\n  });\n\n  if (mealDetails.loading === false) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      align: \"center\",\n      className: \"container\",\n      style: {\n        \"display\": \"grid\",\n        \"gridTemplateColumns\": \"repeat(auto-fit, minmax(200px, 1fr))\"\n      },\n      children: RenderMeals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(MealsHome, \"ETvEaif08PpX5z90WlSF4yng0iA=\");\n\n_c = MealsHome;\nexport default MealsHome;\n\nvar _c;\n\n$RefreshReg$(_c, \"MealsHome\");","map":{"version":3,"sources":["/home/saswat/Desktop/Shareme/frontend/src/Components/meals/meals.js"],"names":["React","useEffect","useState","MealCard","Loading","MealsHome","mealDetails","setMealDetails","loading","mealArray","cosnt","toggle","setToggle","getMeals","FetchMealDetails","fetch","CleanedMealDetails","json","Meal","RenderMeals","map","each","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEtB,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA+BL,QAAQ,CAAC;AAACM,IAAAA,OAAO,EAAC,IAAT;AAAcC,IAAAA,SAAS,EAAC;AAAxB,GAAD,CAA7C;AACAC,EAAAA,KAAK,EAAEC,MAAM,EAACC,SAAT,EAAL,GAA2B,EAA3B;;AAEA,QAAMC,QAAQ,GAAG,YAAW;AAC1B,UAAMC,gBAAgB,GAAG,MAAMC,KAAK,CAAC,oCAAD,CAApC;AACA,UAAMC,kBAAkB,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,EAAjC;AAEAV,IAAAA,cAAc,CAAC;AAACC,MAAAA,OAAO,EAAC,KAAT;AAAeC,MAAAA,SAAS,EAACO;AAAzB,KAAD,CAAd;AAED,GAND;;AASAf,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ;AACT,GAFQ,EAEP,EAFO,CAAT;AAMA,QAAMK,IAAI,GAAGZ,WAAW,CAACG,SAAzB;AAEA,QAAMU,WAAW,GAAGD,IAAI,CAACE,GAAL,CAAUC,IAAD,IAAU;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,wBACE;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,eAAe,EAAEF;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKH,GAPmB,CAApB;;AASA,MAAGf,WAAW,CAACE,OAAZ,KAAwB,KAA3B,EAAiC;AACjC,wBACE;AAAM,MAAA,KAAK,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAC,WAA/B;AAA2C,MAAA,KAAK,EAAE;AAAC,mBAAU,MAAX;AAAkB,+BAAuB;AAAzC,OAAlD;AAAA,gBACGW;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAMC,GAPD,MAQI;AACF,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AAED;AACF,CA3CD;;GAAMd,S;;KAAAA,S;AA8CN,eAAeA,SAAf","sourcesContent":["import React,{useEffect,useState} from 'react';\nimport MealCard from './MealCard';\nimport Loading from '../basic/loading';\nconst MealsHome = () => {\n\n  const [mealDetails,setMealDetails] = useState({loading:true,mealArray:[]});\n  cosnt [toggle,setToggle] = {}\n\n  const getMeals = async() => {\n    const FetchMealDetails = await fetch('http://localhost:8000/khabar/meals')\n    const CleanedMealDetails = await FetchMealDetails.json()\n    \n    setMealDetails({loading:false,mealArray:CleanedMealDetails})\n  \n  }\n\n\n  useEffect(() => {\n    getMeals();\n  },[]);\n\n  \n\n  const Meal = mealDetails.mealArray\n  \n  const RenderMeals = Meal.map((each) => {\n      console.log(\"aaa\")\n      return(\n        <div>\n          <MealCard passMealDetails={each}/>\n        </div>\n      );\n  })\n\n  if(mealDetails.loading === false){\n  return( \n    <div  align=\"center\" className='container' style={{\"display\":\"grid\",\"gridTemplateColumns\": \"repeat(auto-fit, minmax(200px, 1fr))\"}}>\n      {RenderMeals}\n      \n    </div>\n  );\n  }\n  else{\n    return(<Loading/>);\n\n  }\n}\n\n\nexport default MealsHome;\n"]},"metadata":{},"sourceType":"module"}