{"ast":null,"code":"var _jsxFileName = \"/home/saswat/Desktop/NotesApp/learn_react/src/app.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./components/header\";\nimport NotesList from \"./pages/NotesList\";\nimport CreateNote from \"./pages/CreateNote\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport NoteDetails from \"./pages/NoteDetails\";\nimport DeleteNote from \"./pages/DeleteNote\";\nimport UpdateNote from \"./pages/UpdateNote\";\nimport Login from \"./pages/Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [details, setDetails] = useState();\n  const [notesListArray, setNotesListArray] = useState([]);\n  const LIST_KEY = \"notes\";\n  const DETAIL_KEY = \"detail\";\n\n  const getNotesList = async () => {\n    const noteList = await fetch(\"http://localhost:8000/api/notes\");\n    let data = await noteList.json();\n    setNotesListArray(data);\n  };\n\n  const handleNewNote = async param => {\n    console.log(param);\n    const opt = {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(param)\n    };\n    fetch('http://localhost:8000/api/notes/create', opt).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    getNotesList(); // const request = {...param,id:uuid()}\n    // const postResponse = await api.post('/notes',request);\n    // setNotesListArray([...notesListArray,param]);\n  };\n\n  useEffect(() => {\n    //localstorage\n    // const getNotesList = JSON.parse(localStorage.getItem(LIST_KEY));\n    // if(getNotesList){\n    //  setNotesListArray(getNotesList);\n    // }\n    //db.json\n    // const getNotesList = async() => {\n    //     const noteList  = await api.get(\"/notes\");       \n    //     if(noteList.data){\n    //         setNotesListArray(noteList.data);\n    //     }\n    // }\n    getNotesList();\n  }, []);\n  useEffect(() => {\n    const stringArray = JSON.stringify(notesListArray);\n    localStorage.setItem(LIST_KEY, stringArray);\n  }, [notesListArray]);\n\n  const handleDetails = param => {\n    setDetails(param);\n  };\n\n  useEffect(() => {\n    if (details) {\n      localStorage.setItem(DETAIL_KEY, JSON.stringify(details));\n    }\n  }, [handleDetails]);\n  useEffect(() => {\n    const getDetails = JSON.parse(localStorage.getItem(DETAIL_KEY));\n\n    if (getDetails) {\n      setDetails(getDetails);\n    }\n  }, []);\n\n  const handleDelete = key => {\n    const newArray = notesListArray.filter(each => {\n      return each.id !== key;\n    });\n    setNotesListArray(newArray);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add\",\n          element: /*#__PURE__*/_jsxDEV(CreateNote, {\n            passNote: handleNewNote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/list\",\n          element: /*#__PURE__*/_jsxDEV(NotesList, {\n            passNotesList: notesListArray,\n            getDetails: handleDetails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/details\",\n          element: /*#__PURE__*/_jsxDEV(NoteDetails, {\n            passDetails: details\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/delete\",\n          element: /*#__PURE__*/_jsxDEV(DeleteNote, {\n            passDeleteDetails: details,\n            getDeleteData: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), \";\", /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/edit\",\n          element: /*#__PURE__*/_jsxDEV(UpdateNote, {\n            passData: details\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"Wm7TrQjB5TeoYN6t65id1+N2uJE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/saswat/Desktop/NotesApp/learn_react/src/app.js"],"names":["React","useState","useEffect","Header","NotesList","CreateNote","BrowserRouter","Router","Route","Routes","NoteDetails","DeleteNote","UpdateNote","Login","App","details","setDetails","notesListArray","setNotesListArray","LIST_KEY","DETAIL_KEY","getNotesList","noteList","fetch","data","json","handleNewNote","param","console","log","opt","method","headers","body","JSON","stringify","then","response","catch","error","stringArray","localStorage","setItem","handleDetails","getDetails","parse","getItem","handleDelete","key","newArray","filter","each","id"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect } from \"react\";\nimport Header from \"./components/header\";\nimport NotesList from \"./pages/NotesList\";\nimport CreateNote from \"./pages/CreateNote\";\n\nimport { BrowserRouter as Router,Route,Routes } from \"react-router-dom\";\nimport NoteDetails from \"./pages/NoteDetails\";\nimport DeleteNote from \"./pages/DeleteNote\";\nimport UpdateNote from \"./pages/UpdateNote\";\nimport Login from \"./pages/Login\";\n\n\nconst App = () => {\n    \n    const [details,setDetails] = useState();\n    const [notesListArray,setNotesListArray] = useState([]);\n\n    const LIST_KEY = \"notes\";\n    const DETAIL_KEY = \"detail\";\n    const getNotesList = async() => {\n        const noteList = await fetch(\"http://localhost:8000/api/notes\")\n        let data = await noteList.json()\n       \n        setNotesListArray(data);\n    }\n    \n\n\n    const handleNewNote = async(param) => {        \n        console.log(param);\n        const opt = {\n            method:\"POST\",\n            headers: {'Accept': 'application/json','Content-Type': 'application/json'},\n            body: JSON.stringify(param),\n        }\n        fetch('http://localhost:8000/api/notes/create',opt).then(function (response) {\n            console.log(response);\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n        \n        getNotesList();\n\n       \n\n\n        // const request = {...param,id:uuid()}\n        // const postResponse = await api.post('/notes',request);\n        // setNotesListArray([...notesListArray,param]);\n        }\n\n\n   \n\n\n\n    useEffect(() => {\n        \n        //localstorage\n        // const getNotesList = JSON.parse(localStorage.getItem(LIST_KEY));\n        // if(getNotesList){\n        //  setNotesListArray(getNotesList);\n        // }\n\n        //db.json\n        // const getNotesList = async() => {\n        //     const noteList  = await api.get(\"/notes\");       \n        //     if(noteList.data){\n        //         setNotesListArray(noteList.data);\n        //     }\n        // }\n       \n    \n       \n       \n        getNotesList();\n     }, [])\n\n    useEffect(() => {\n        const stringArray = JSON.stringify(notesListArray);\n        localStorage.setItem(LIST_KEY,stringArray);\n    }, [notesListArray])\n\n\n\n \n    const handleDetails = (param) => {\n        setDetails(param);\n    }\n\n\n\n\n    useEffect(() => {\n        if(details){\n            localStorage.setItem(DETAIL_KEY,JSON.stringify(details));\n        }\n    }, [handleDetails])\n    \n    useEffect(() => {\n        const getDetails = JSON.parse(localStorage.getItem(DETAIL_KEY));\n        if(getDetails){\n            setDetails(getDetails);\n        } \n    }, [])\n\n\n\n\n    const handleDelete = (key) => {\n       \n        const newArray = notesListArray.filter((each) => {\n           return each.id !== key;\n        })\n        setNotesListArray(newArray);\n    }\n  \n\n   \n\n    return(\n        <div>\n        \n        <Router>\n        <Header/>\n            <Routes>     \n            <Route path=\"/\" element={<Login/>}/>\n            <Route path=\"/add\" element={<CreateNote passNote={handleNewNote}/>}/>\n            <Route path=\"/list\" element={<NotesList  passNotesList={notesListArray}  getDetails={handleDetails}/>}/>\n            <Route path=\"/details\" element={<NoteDetails passDetails={details}/>}/>\n            <Route path=\"/delete\" element={<DeleteNote passDeleteDetails={details} getDeleteData={handleDelete}/>}/>;\n            <Route path=\"/edit\" element={<UpdateNote passData={details}/>}/> \n            </Routes>\n        </Router>\n        </div>\n    );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}