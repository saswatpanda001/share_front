{"ast":null,"code":"var _jsxFileName = \"/home/saswat/Desktop/Shareme/frontend/src/ProtectedRoutes.js\";\nimport React, { useState } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoutes = _ref => {\n  let {\n    component: Component,\n    ...restOfProps\n  } = _ref;\n  const isAuthenticated = null;\n\n  if (localStorage.getItem(\"access_token\")) {\n    isAuthenticated = true;\n  } else {\n    isAuthenticated = false;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Route, { ...restOfProps,\n    render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/signin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 54\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ProtectedRoutes;\nexport default ProtectedRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoutes\");","map":{"version":3,"sources":["/home/saswat/Desktop/Shareme/frontend/src/ProtectedRoutes.js"],"names":["React","useState","Redirect","Route","Navigate","ProtectedRoutes","component","Component","restOfProps","isAuthenticated","localStorage","getItem","props"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;AAEA,MAAMC,eAAe,GAAG,QAA+C;AAAA,MAA9C;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwB,OAAGC;AAA3B,GAA8C;AAEnE,QAAMC,eAAe,GAAG,IAAxB;;AACA,MAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAH,EAAwC;AACpCF,IAAAA,eAAe,GAAC,IAAhB;AACH,GAFD,MAGI;AACAA,IAAAA,eAAe,GAAC,KAAhB;AACH;;AAGH,sBACE,QAAC,KAAD,OACMD,WADN;AAEE,IAAA,MAAM,EAAGI,KAAD,IACNH,eAAe,gBAAG,QAAC,SAAD,OAAeG;AAAf;AAAA;AAAA;AAAA;AAAA,YAAH,gBAA8B,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAHjD;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAnBD;;KAAMP,e;AAqBN,eAAeA,eAAf","sourcesContent":["import React,{useState} from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { Navigate } from 'react-router-dom';\n\nconst ProtectedRoutes = ({ component: Component, ...restOfProps }) =>  {\n\n    const isAuthenticated = null;\n    if(localStorage.getItem(\"access_token\")){\n        isAuthenticated=true;\n    }\n    else{\n        isAuthenticated=false\n    }\n    \n\n  return (\n    <Route\n      {...restOfProps}\n      render={(props) =>\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/signin\" />\n      }\n    />\n  );\n}\n\nexport default ProtectedRoutes;\n"]},"metadata":{},"sourceType":"module"}