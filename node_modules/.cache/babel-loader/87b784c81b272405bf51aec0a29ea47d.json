{"ast":null,"code":"var _jsxFileName = \"/home/saswat/Desktop/NotesApp/learn_react/src/app.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./components/header\";\nimport NotesList from \"./pages/NotesList\";\nimport CreateNote from \"./pages/CreateNote\";\nimport { v4 as uuid } from 'uuid';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport NoteDetails from \"./pages/NoteDetails\";\nimport DeleteNote from \"./pages/DeleteNote\"; // import UpdateNote from \"./pages/UpdateNote\";\n\nimport Login from \"./pages/Login\";\nimport api from \"./api/notes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [details, setDetails] = useState();\n  const [notesListArray, setNotesListArray] = useState([]);\n  const LIST_KEY = \"notes\";\n  const DETAIL_KEY = \"detail\";\n\n  const handleNewNote = param => {\n    param.id = uuid();\n    setNotesListArray([...notesListArray, param]);\n  };\n\n  const handleNotes = async () => {\n    const response = await api.get(\"/notes\");\n    return response.data;\n  };\n\n  useEffect(() => {\n    // const getNotesList = JSON.parse(localStorage.getItem(LIST_KEY));\n    // if(getNotesList){\n    //  setNotesListArray(getNotesList);\n    // }\n    const getNotesList = async () => {\n      const noteList = await handleNotes();\n\n      if (noteList) {\n        setNotesListArray(noteList);\n      }\n    };\n\n    getNotesList();\n  }, []);\n  useEffect(() => {\n    const stringArray = JSON.stringify(notesListArray);\n    localStorage.setItem(LIST_KEY, stringArray);\n  }, [notesListArray]);\n\n  const handleDetails = param => {\n    setDetails(param);\n  };\n\n  useEffect(() => {\n    if (details) {\n      localStorage.setItem(DETAIL_KEY, JSON.stringify(details));\n    }\n  }, [handleDetails]);\n  useEffect(() => {\n    const getDetails = JSON.parse(localStorage.getItem(DETAIL_KEY));\n\n    if (getDetails) {\n      setDetails(getDetails);\n    }\n  }, []);\n\n  const handleDelete = key => {\n    const newArray = notesListArray.filter(each => {\n      return each.id !== key;\n    });\n    setNotesListArray(newArray);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add\",\n          element: /*#__PURE__*/_jsxDEV(CreateNote, {\n            passNote: handleNewNote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/list\",\n          element: /*#__PURE__*/_jsxDEV(NotesList, {\n            passNotesList: notesListArray,\n            getDetails: handleDetails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/details\",\n          element: /*#__PURE__*/_jsxDEV(NoteDetails, {\n            passDetails: details\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/delete\",\n          element: /*#__PURE__*/_jsxDEV(DeleteNote, {\n            passDeleteDetails: details,\n            getDeleteData: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), \";\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"Wm7TrQjB5TeoYN6t65id1+N2uJE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/saswat/Desktop/NotesApp/learn_react/src/app.js"],"names":["React","useState","useEffect","Header","NotesList","CreateNote","v4","uuid","BrowserRouter","Router","Route","Routes","NoteDetails","DeleteNote","Login","api","App","details","setDetails","notesListArray","setNotesListArray","LIST_KEY","DETAIL_KEY","handleNewNote","param","id","handleNotes","response","get","data","getNotesList","noteList","stringArray","JSON","stringify","localStorage","setItem","handleDetails","getDetails","parse","getItem","handleDelete","key","newArray","filter","each"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect } from \"react\";\nimport Header from \"./components/header\";\nimport NotesList from \"./pages/NotesList\";\nimport CreateNote from \"./pages/CreateNote\";\nimport {v4 as uuid} from 'uuid';\nimport { BrowserRouter as Router,Route,Routes } from \"react-router-dom\";\nimport NoteDetails from \"./pages/NoteDetails\";\nimport DeleteNote from \"./pages/DeleteNote\";\n// import UpdateNote from \"./pages/UpdateNote\";\nimport Login from \"./pages/Login\";\nimport api from \"./api/notes\";\n\nconst App = () => {\n    \n    const [details,setDetails] = useState();\n    const [notesListArray,setNotesListArray] = useState([]);\n\n    const LIST_KEY = \"notes\";\n    const DETAIL_KEY = \"detail\";\n\n\n\n    const handleNewNote = (param) => {        \n        param.id = uuid();\n        setNotesListArray([...notesListArray,param]);\n    }\n\n\n    const handleNotes = async() => {\n        const response =await api.get(\"/notes\")\n        return response.data;\n    }\n\n\n\n\n    useEffect(() => {\n        // const getNotesList = JSON.parse(localStorage.getItem(LIST_KEY));\n        // if(getNotesList){\n        //  setNotesListArray(getNotesList);\n        // }\n\n\n        const getNotesList = async() => {\n            const noteList  = await handleNotes();\n            if(noteList){\n                setNotesListArray(noteList);\n            }\n        }\n        getNotesList();\n     }, [])\n    useEffect(() => {\n        const stringArray = JSON.stringify(notesListArray);\n        localStorage.setItem(LIST_KEY,stringArray);\n    }, [notesListArray])\n\n\n\n \n    const handleDetails = (param) => {\n        setDetails(param);\n    }\n\n\n\n\n    useEffect(() => {\n        if(details){\n            localStorage.setItem(DETAIL_KEY,JSON.stringify(details));\n        }\n    }, [handleDetails])\n    useEffect(() => {\n        const getDetails = JSON.parse(localStorage.getItem(DETAIL_KEY));\n        if(getDetails){\n            setDetails(getDetails);\n        } \n    }, [])\n    \n\n\n\n    const handleDelete = (key) => {\n       \n        const newArray = notesListArray.filter((each) => {\n           return each.id !== key;\n        })\n        setNotesListArray(newArray);\n    }\n\n   \n\n   \n\n    return(\n        <div>\n        \n        <Router>\n        <Header/>\n            <Routes>     \n            <Route path=\"/\" element={<Login/>}/>\n            <Route path=\"/add\" element={<CreateNote passNote={handleNewNote}/>}/>\n            <Route path=\"/list\" element={<NotesList  passNotesList={notesListArray}  getDetails={handleDetails}/>}/>\n            <Route path=\"/details\" element={<NoteDetails passDetails={details}/>}/>\n            <Route path=\"/delete\" element={<DeleteNote passDeleteDetails={details} getDeleteData={handleDelete}/>}/>;\n            {/* <Route path=\"/edit\" element={<UpdateNote passData={details}/>}/>  */}\n            </Routes>\n        </Router>\n        </div>\n    );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}