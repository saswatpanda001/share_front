{"ast":null,"code":"var _jsxFileName = \"/home/saswat/Desktop/Shareme/frontend/src/Components/chat/chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { DecodeToken } from '../token_decode';\nimport AxiosRequest from '../../axios';\nimport { Axios } from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chat = () => {\n  _s();\n\n  const location = useLocation();\n  const [message, setMessage] = useState(\"\");\n  const [messageData, setMessageData] = useState([]);\n  const user_id = DecodeToken(localStorage.getItem(\"access_token\"));\n  const chat_id = location.pathname.slice(14);\n  const ws_api = new WebSocket(`ws://localhost:8000/ws/chat/${chat_id}`);\n\n  ws_api.onopen = () => {\n    console.log(\"connection established\");\n  };\n\n  ws_api.onclose = () => {\n    console.log(\"disconnected\");\n  }; // ws_api.onmessage = (res) => {console.log(res.data) ;retrieveMessages();}\n  // const socketMessages = () => {\n  //     const msg_data = JSON.stringify({\"message\":message,\"msg_id\":chat_id})\n  //     if(message !== \"\"){\n  //         ws_api.send(msg_data);\n  //     }\n  // }\n\n\n  const retrieveMessages = async () => {\n    const getMessage = await AxiosRequest(`/chat/text/${chat_id}`).then(res => {\n      setMessageData(res.data);\n    });\n  };\n\n  const sendMessages = async () => {\n    const sendMessage = await AxiosRequest.post(`/chat/text/${chat_id}`, {\n      \"data\": message\n    }).then(res => {\n      retrieveMessages();\n    });\n  };\n\n  const RenderMessages = messageData.map(each => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3 mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: [each.sender_name, \": \", each.data]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  });\n  useEffect(() => {\n    retrieveMessages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid mt-4 ml-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter the message\",\n        onChange: e => {\n          setMessage(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-dark\",\n        onClick: sendMessages,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-dark\",\n        onClick: socketMessages,\n        children: \"Send(via ws)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), RenderMessages]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"kN9ITqv8ccTh6uY3r70vN5pxuq4=\", false, function () {\n  return [useLocation];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/saswat/Desktop/Shareme/frontend/src/Components/chat/chat.js"],"names":["React","useState","useEffect","useNavigate","useLocation","Link","DecodeToken","AxiosRequest","Axios","Chat","location","message","setMessage","messageData","setMessageData","user_id","localStorage","getItem","chat_id","pathname","slice","ws_api","WebSocket","onopen","console","log","onclose","retrieveMessages","getMessage","then","res","data","sendMessages","sendMessage","post","RenderMessages","map","each","sender_name","e","target","value","socketMessages"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport { useNavigate, useLocation } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport { DecodeToken } from '../token_decode'\nimport AxiosRequest from '../../axios'\nimport { Axios } from 'axios'\n\n\nconst Chat = () => {\n    const location = useLocation()\n    const [message,setMessage] = useState(\"\")\n    const [messageData,setMessageData] = useState([])\n    const user_id = DecodeToken(localStorage.getItem(\"access_token\"))\n    const chat_id = location.pathname.slice(14)\n    const ws_api = new WebSocket(`ws://localhost:8000/ws/chat/${chat_id}`)\n\n    ws_api.onopen = () => {console.log(\"connection established\")}\n    \n    ws_api.onclose = () => {console.log(\"disconnected\")}\n\n\n    // ws_api.onmessage = (res) => {console.log(res.data) ;retrieveMessages();}\n\n    // const socketMessages = () => {\n    //     const msg_data = JSON.stringify({\"message\":message,\"msg_id\":chat_id})\n    //     if(message !== \"\"){\n    //         ws_api.send(msg_data);\n    //     }\n    // }\n\n    \n\n    \n   \n\n\n    const retrieveMessages = async() => {\n        const getMessage = await AxiosRequest(`/chat/text/${chat_id}`)\n                            .then((res) => {\n                                setMessageData(res.data);\n                            })\n    }\n\n    const sendMessages = async() => {\n        const sendMessage = await AxiosRequest.post(`/chat/text/${chat_id}`,{\"data\":message})\n                            .then((res) => {retrieveMessages();})\n        \n    }\n\n    const RenderMessages = messageData.map((each) => {\n        return(\n            <div className='mt-3 mb-3'>\n                \n                <p className='lead'>{each.sender_name}: {each.data}</p>\n            </div>\n        )\n    })\n\n    useEffect(() => {\n        retrieveMessages();\n    },[])\n    \n    \n  \n    return (\n    <div className='container-fluid mt-4 ml-4'>\n        <div className='d-flex'>\n            <input placeholder='Enter the message' onChange={(e) => {setMessage(e.target.value)}}></input>\n            <button className='btn btn-dark' onClick={sendMessages}>Send</button>\n            <button className='btn btn-dark' onClick={socketMessages}>Send(via ws)</button>\n        </div>\n        {RenderMessages}\n    </div>\n  )\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}