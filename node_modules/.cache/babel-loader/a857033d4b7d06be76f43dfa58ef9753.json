{"ast":null,"code":"var _jsxFileName = \"/home/saswat/Documents/Django/Shareme/frontend/src/Components/Contacts/Contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport AxiosRequest from '../../axios';\nimport Search from '../basic/search';\nimport { DecodeToken } from '../token_decode';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contact = () => {\n  _s();\n\n  const user_id = DecodeToken(localStorage.getItem(\"access_token\")).user_id;\n  const [search, setSearch] = useState(\"\");\n  const [contacts, setContacts] = useState([]);\n\n  const RetrieveContacts = async ser => {\n    if (ser) {\n      const data = await AxiosRequest.post(`/accounts/profile/${user_id}`, ser).then(res => {\n        setContacts(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      const data = await AxiosRequest.get(`/accounts/profile/${user_id}`).then(res => {\n        setContacts(res.data.cm);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  const RenderContacts = contacts.map(each => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        props: each\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, each.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  });\n  useEffect(() => {\n    RetrieveContacts(search);\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4 ml-4\",\n    text: true,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-5xl sm:text-xl md:text-2xl\",\n      children: \"Hello world\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3\",\n      children: RenderContacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contact, \"ijMsL8Jn6/S4rLCcwGyJl8wFls4=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/home/saswat/Documents/Django/Shareme/frontend/src/Components/Contacts/Contact.js"],"names":["React","useState","useEffect","AxiosRequest","Search","DecodeToken","Card","Contact","user_id","localStorage","getItem","search","setSearch","contacts","setContacts","RetrieveContacts","ser","data","post","then","res","catch","err","console","log","get","cm","RenderContacts","map","each","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,YAAP,MAAyB,aAAzB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAIA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAMC,OAAO,GAAGH,WAAW,CAACI,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAD,CAAX,CAAkDF,OAAlE;AACA,QAAM,CAACG,MAAD,EAAQC,SAAR,IAAqBX,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACY,QAAD,EAAUC,WAAV,IAAyBb,QAAQ,CAAC,EAAD,CAAvC;;AAGA,QAAMc,gBAAgB,GAAG,MAAMC,GAAN,IAAc;AAEnC,QAAGA,GAAH,EAAO;AACP,YAAMC,IAAI,GAAG,MAAMd,YAAY,CAACe,IAAb,CAAmB,qBAAoBV,OAAQ,EAA/C,EAAiDQ,GAAjD,EACNG,IADM,CACAC,GAAD,IAAS;AACXN,QAAAA,WAAW,CAACM,GAAG,CAACH,IAAL,CAAX;AACH,OAHM,EAINI,KAJM,CAICC,GAAD,IAAS;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB,OAJ3B,CAAnB;AAKW,KANX,MAOI;AACA,YAAML,IAAI,GAAG,MAAMd,YAAY,CAACsB,GAAb,CAAkB,qBAAoBjB,OAAQ,EAA9C,EAClBW,IADkB,CACZC,GAAD,IAAS;AACXN,QAAAA,WAAW,CAACM,GAAG,CAACH,IAAJ,CAASS,EAAV,CAAX;AACH,OAHkB,EAIlBL,KAJkB,CAIXC,GAAD,IAAS;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB,OAJf,CAAnB;AAKD;AACF,GAhBL;;AAoBA,QAAMK,cAAc,GAAGd,QAAQ,CAACe,GAAT,CAAcC,IAAD,IAAU;AAE5C,wBACA;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEA;AAAb;AAAA;AAAA;AAAA;AAAA;AADF,OAAUA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,YADA;AAMD,GARsB,CAAvB;AAWA5B,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,gBAAgB,CAACJ,MAAD,CAAhB;AAED,GAHQ,EAGN,CAACA,MAAD,CAHM,CAAT;AAMA,sBACA;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAqC,IAAA,IAAI,MAAzC;AAAA,4BAEE;AAAI,MAAA,SAAS,EAAC,iCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAQI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBACIgB;AADJ;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAiBC,CA5DL;;GAAMpB,O;;KAAAA,O;AA8DN,eAAeA,OAAf","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport AxiosRequest from '../../axios'\nimport Search from '../basic/search'\nimport { DecodeToken } from '../token_decode'\nimport Card from './Card'\n\n\n\nconst Contact = () => {\n    const user_id = DecodeToken(localStorage.getItem(\"access_token\")).user_id\n    const [search,setSearch] = useState(\"\");\n    const [contacts,setContacts] = useState([]);\n\n    \n    const RetrieveContacts = async(ser) => {\n        \n        if(ser){\n        const data = await AxiosRequest.post(`/accounts/profile/${user_id}`,ser)\n                    .then((res) => {\n                        setContacts(res.data)\n                    })\n                    .catch((err) => {console.log(err)})\n                  }\n        else{\n            const data = await AxiosRequest.get(`/accounts/profile/${user_id}`)\n            .then((res) => {\n                setContacts(res.data.cm)\n            })\n            .catch((err) => {console.log(err)})\n          }\n        }\n      \n    \n\n    const RenderContacts = contacts.map((each) => {\n      \n      return( \n      <div key={each.id}>\n        <Card props={each}></Card>\n      </div>\n     );\n      \n    })\n    \n\n    useEffect(() => {\n      RetrieveContacts(search);\n      \n    }, [search])\n   \n\n    return (\n    <div className='container mt-4 ml-4' text>\n\n      <h1 className='text-5xl sm:text-xl md:text-2xl'>Hello world</h1>\n\n        {/* <div className='flex justify-center'>\n        <input className=\"form-control w-25\" onChange={(e) => setSearch(e.target.value)} type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n        </div> */}\n    \n        <div className='grid grid-cols-3'>\n           {RenderContacts}\n        </div>\n\n    </div>\n\n\n  )\n    }\n\nexport default Contact"]},"metadata":{},"sourceType":"module"}