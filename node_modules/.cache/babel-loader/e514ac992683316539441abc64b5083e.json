{"ast":null,"code":"var _jsxFileName = \"/home/saswat/Desktop/Shareme/frontend/src/Components/chat/chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { DecodeToken } from '../token_decode';\nimport AxiosRequest from '../../axios';\nimport { Axios } from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst user_id = DecodeToken(localStorage.getItem(\"access_token\"));\nconst ws_api = new WebSocket(`ws://localhost:8000/ws/chat/${window.location.pathname.slice(14)}`);\n\nconst Chat = () => {\n  _s();\n\n  const location = useLocation();\n  const chat_id = location.pathname.slice(14);\n  const yy = location.pathname.slice(14);\n  const [message, setMessage] = useState(\"\");\n  const [messageData, setMessageData] = useState([]);\n\n  ws_api.onopen = () => {\n    console.log(\"connection established\");\n  };\n\n  ws_api.onclose = () => {\n    console.log(\"disconnected\");\n  };\n\n  ws_api.onmessage = res => {\n    if (res.data) {\n      console.log(res);\n    }\n  };\n\n  const socketMessages = () => {\n    const msg_data = JSON.stringify({\n      \"data\": message,\n      \"code\": chat_id,\n      \"type\": \"send\"\n    });\n\n    if (msg_data.data !== \"\") {\n      ws_api.send(msg_data);\n    }\n  };\n\n  const retrieveMessages = async () => {\n    const getMessage = await AxiosRequest(`/chat/text/${chat_id}`).then(res => {\n      setMessageData(res.data);\n      console.log(res.data);\n    }); // const messagesList = JSON.stringify({\"data\":message,\"code\":chat_id,\"type\":\"fetch\"})\n    // ws_api.send(messagesList); \n  }; // const sendMessages = async() => {\n  //     const sendMessage = await AxiosRequest.post(`/chat/text/${chat_id}`,{\"data\":message})\n  //                         .then((res) => {retrieveMessages();})\n  // }\n\n\n  const RenderMessages = messageData.map(each => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3 mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: [each.sender_name, \": \", each.data]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  });\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid mt-4 ml-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter the message\",\n        onChange: e => {\n          setMessage(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-dark\",\n        onClick: socketMessages,\n        children: \"Send(via ws)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), RenderMessages]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"kN9ITqv8ccTh6uY3r70vN5pxuq4=\", false, function () {\n  return [useLocation];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/saswat/Desktop/Shareme/frontend/src/Components/chat/chat.js"],"names":["React","useState","useEffect","useNavigate","useLocation","Link","DecodeToken","AxiosRequest","Axios","user_id","localStorage","getItem","ws_api","WebSocket","window","location","pathname","slice","Chat","chat_id","yy","message","setMessage","messageData","setMessageData","onopen","console","log","onclose","onmessage","res","data","socketMessages","msg_data","JSON","stringify","send","retrieveMessages","getMessage","then","RenderMessages","map","each","sender_name","e","target","value"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport { useNavigate, useLocation } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport { DecodeToken } from '../token_decode'\nimport AxiosRequest from '../../axios'\nimport { Axios } from 'axios'\n\nconst user_id = DecodeToken(localStorage.getItem(\"access_token\"))\nconst ws_api = new WebSocket(`ws://localhost:8000/ws/chat/${window.location.pathname.slice(14)}`);\n\nconst Chat = () => {\n    const location = useLocation()\n    const chat_id = location.pathname.slice(14)\n    const yy =location.pathname.slice(14)\n    const [message,setMessage] = useState(\"\")\n    const [messageData,setMessageData] = useState([])\n\n    ws_api.onopen = () => {console.log(\"connection established\")}\n    ws_api.onclose = () => {console.log(\"disconnected\")}\n\n    ws_api.onmessage = (res) => {\n        if(res.data){\n            console.log(res)\n        }\n    }\n\n    const socketMessages = () => {\n        const msg_data = JSON.stringify({\"data\":message,\"code\":chat_id,\"type\":\"send\"})\n        if(msg_data.data !== \"\"){\n            ws_api.send(msg_data);\n        }\n    }\n\n    \n    \n   \n\n\n    const retrieveMessages = async() => {\n        const getMessage = await AxiosRequest(`/chat/text/${chat_id}`)\n                            .then((res) => {\n                                setMessageData(res.data);\n                                console.log(res.data)\n                            })\n\n\n        // const messagesList = JSON.stringify({\"data\":message,\"code\":chat_id,\"type\":\"fetch\"})\n        // ws_api.send(messagesList); \n\n    }\n\n    // const sendMessages = async() => {\n    //     const sendMessage = await AxiosRequest.post(`/chat/text/${chat_id}`,{\"data\":message})\n    //                         .then((res) => {retrieveMessages();})\n    // }\n\n    const RenderMessages = messageData.map((each) => {\n        return(\n            <div className='mt-3 mb-3'>\n                \n                <p className='lead'>{each.sender_name}: {each.data}</p>\n            </div>\n        )\n    })\n\n\n    useEffect(() => {\n      \n    }, [])\n    \n\n\n    return (\n    <div className='container-fluid mt-4 ml-4'>\n        <div className='d-flex'>\n            <input placeholder='Enter the message' onChange={(e) => {setMessage(e.target.value)}}></input>\n            {/* <button className='btn btn-dark' onClick={sendMessages}>Send</button> */}\n            <button className='btn btn-dark' onClick={socketMessages}>Send(via ws)</button>\n        </div>\n        {RenderMessages}\n    </div>\n  )\n}\n\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}